import * as sinon from "sinon"
import * as _ from "lodash"

export class SpyProvider {

    private static spies = {};

    constructor() {

        throw new Error("New instances are not allowed!");

    }


    public static createSpy(object: any, methodName: string) {

        if (!SpyProvider.spies[object.constructor.name]) {

            SpyProvider.spies[object.constructor.name] = {};

        }

        SpyProvider.spies[object.constructor.name][methodName] = sinon.spy(object, methodName);

        return SpyProvider.spies[object.constructor.name][methodName];

    }


    public static getSpyFor(object: any, methodName) {


        if (_.isString(object)) {

            return SpyProvider.spies[object][methodName];

        }

        if(_.isFunction(object)) {

            return SpyProvider.spies[object.name][methodName];

        }


        return SpyProvider.spies[object.constructor.name][methodName];
    }
}
