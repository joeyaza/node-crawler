import {expect} from "chai"
import * as sinon from "sinon"
import {SpyProvider} from "./SpyProvider";


class DummyClass {

    public doStuff() {

        return null;

    }

}


let dummyClass = new DummyClass();

describe("SpyProvider", () => {

    describe("when instantiated", () => {

        it("should throw an error", () => {

            expect(() => {
                new SpyProvider();
            }).to.throw(Error);

        });

    });



    describe("when asked to create a spy", () => {


        it("should should register a spy", () => {

            SpyProvider.createSpy(dummyClass, "doStuff");

            expect(SpyProvider.getSpyFor(dummyClass, "doStuff")).not.to.equal(undefined);


        });


    });


    describe("when asked to provide a spy", () => {

        it("should provide a valid spy", () => {

            let spy = SpyProvider.getSpyFor(dummyClass, "doStuff");

            expect(spy).to.be.instanceOf(Object);

        });


    });

});