import {InvalidConfigException} from "./Exceptions/InvalidConfigException";
import * as _ from "lodash";
import * as fs from "fs";

require("rootpath")();

const CONFIG_PATH = "config.json";

export function Configure (configPropertyName: string, defaults = {}) {

    return function (target: any, key: string) {

        try {

            let configJSON = fs.readFileSync(CONFIG_PATH).toString();

            let config = _.reduce(_.split(configPropertyName, "."), (reduced, key) => {

                return reduced[key];

            }, JSON.parse(configJSON));


            target[key] = _.merge(defaults, config);


            if(_.isEmpty(target[key])) {

                throw new InvalidConfigException("Empty config found under: " + configPropertyName);

            }

        } catch (exception) {

            throw new InvalidConfigException(configPropertyName + ": " + exception.message);

        }

    }

}