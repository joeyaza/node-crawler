"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Logger_1 = require("../../Logger/Logger");
var AbstractTransport = (function () {
    function AbstractTransport() {
    }
    Object.defineProperty(AbstractTransport.prototype, "settings", {
        get: function () {
            return this._settings;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AbstractTransport.prototype, "logLevel", {
        get: function () {
            return this._logLevel;
        },
        enumerable: true,
        configurable: true
    });
    AbstractTransport.prototype.initialize = function (settings, logLevel) {
        if (logLevel === void 0) { logLevel = Logger_1.LogLevel.DEBUG; }
        this._settings = settings;
        this._logLevel = logLevel;
    };
    AbstractTransport.prototype.log = function (logLevel, message) {
        var methodName = Logger_1.LogLevel[logLevel].toLowerCase();
        if (!this[methodName]) {
            throw new Error("Method does not exist");
        }
        this[methodName](message);
    };
    AbstractTransport.prototype.debug = function (message) { };
    AbstractTransport.prototype.info = function (message) { };
    AbstractTransport.prototype.error = function (message) { };
    AbstractTransport.prototype.increment = function (fieldName, delta) { };
    AbstractTransport.prototype.decrement = function (fieldName, delta) { };
    AbstractTransport.prototype.gauge = function (fieldName, value) { };
    AbstractTransport.prototype.gaugeDelta = function (fieldName, value) { };
    return AbstractTransport;
}());
exports.AbstractTransport = AbstractTransport;
//# sourceMappingURL=AbstractTransport.js.map