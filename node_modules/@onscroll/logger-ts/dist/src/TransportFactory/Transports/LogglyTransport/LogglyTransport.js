"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var AbstractTransport_1 = require("./../AbstractTransport");
var di_ts_1 = require("@onscroll/di-ts");
var BunyanLoggerFactory_1 = require("./BunyanLoggerFactory/BunyanLoggerFactory");
var _ = require("lodash");
var LogglyTransport = (function (_super) {
    __extends(LogglyTransport, _super);
    function LogglyTransport(bunyanLoggerFactory) {
        var _this = _super.call(this) || this;
        _this.bunyanLoggerFactory = bunyanLoggerFactory;
        _this.tag = "";
        return _this;
    }
    LogglyTransport.prototype.initialize = function (settings) {
        _super.prototype.initialize.call(this, settings);
        this.logger = this.bunyanLoggerFactory.createLogger(this.settings);
        this.tag = this.settings.tag;
    };
    LogglyTransport.prototype.debug = function (message) {
        this.logger.debug(this.prepareMessage(message, "DEBUG", this.tag));
    };
    LogglyTransport.prototype.info = function (message) {
        this.logger.info(this.prepareMessage(message, "INFO", this.tag));
    };
    LogglyTransport.prototype.error = function (message) {
        this.logger.error(this.prepareMessage(message, "ERROR", this.tag));
    };
    LogglyTransport.prototype.prepareMessage = function (message, level, tag) {
        var preparedMessage;
        if (message instanceof Error) {
            preparedMessage = {
                error: message.message,
                stack: message.stack
            };
        }
        if (typeof message !== "object") {
            preparedMessage = {
                message: message,
            };
        }
        if (!preparedMessage) {
            preparedMessage = _.clone(message);
        }
        preparedMessage.label = level;
        preparedMessage.tag = tag;
        return preparedMessage;
    };
    LogglyTransport = __decorate([
        di_ts_1.Inject,
        __metadata("design:paramtypes", [BunyanLoggerFactory_1.BunyanLoggerFactory])
    ], LogglyTransport);
    return LogglyTransport;
}(AbstractTransport_1.AbstractTransport));
exports.LogglyTransport = LogglyTransport;
//# sourceMappingURL=LogglyTransport.js.map