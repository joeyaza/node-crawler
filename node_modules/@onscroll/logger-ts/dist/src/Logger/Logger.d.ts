import { AbstractTransport } from "../TransportFactory/Transports/AbstractTransport";
import { TransportFactory } from "../TransportFactory/TransportFactory";
export declare class Logger {
    private transportFactory;
    logLevel: LogLevel;
    private transports;
    private config;
    constructor(transportFactory: TransportFactory);
    debug(message: any): boolean;
    info(message: any): boolean;
    log(message: any): boolean;
    error(message: any): boolean;
    increment(fieldName: string, delta?: number): boolean;
    decrement(fieldName: string, delta?: number): boolean;
    gauge(fieldName: string, value: number): boolean;
    gaugeDelta(fieldName: string, value: number): boolean;
    parseTransports(transportSettings: any): AbstractTransport[];
    private writeLog(logLevel, message);
    private updateMetrics(method, ...args);
    private isSupportedLevel(logLevel);
    private setDefaultOptions(options);
}
export declare enum LogLevel {
    DEBUG = 0,
    INFO = 1,
    ERROR = 2,
}
