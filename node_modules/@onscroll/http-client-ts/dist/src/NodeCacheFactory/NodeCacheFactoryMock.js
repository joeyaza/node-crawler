"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var di_ts_1 = require("@onscroll/di-ts");
var NodeCacheFactory_1 = require("./NodeCacheFactory");
var Promise = require("bluebird");
var NodeCacheFactoryMock = (function () {
    function NodeCacheFactoryMock() {
    }
    NodeCacheFactoryMock.prototype.createCache = function (ttl) {
        return new NodeCacheMock();
    };
    return NodeCacheFactoryMock;
}());
NodeCacheFactoryMock = __decorate([
    di_ts_1.Provide(NodeCacheFactory_1.NodeCacheFactory),
    __metadata("design:paramtypes", [])
], NodeCacheFactoryMock);
exports.NodeCacheFactoryMock = NodeCacheFactoryMock;
var NodeCacheMock = (function () {
    function NodeCacheMock() {
    }
    NodeCacheMock.prototype.get = function (key) {
        return Promise.resolve(NodeCacheMock.cachedValue);
    };
    NodeCacheMock.prototype.set = function () {
    };
    return NodeCacheMock;
}());
exports.NodeCacheMock = NodeCacheMock;
